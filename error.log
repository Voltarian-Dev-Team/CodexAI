.\d_net.c:464:23: warning: multiple unsequenced modifications to 'eventtail' [-Wunsequenced]
              ; eventtail = (++eventtail)&(MAXEVENTS-1) ) 
                          ~  ^
1 warning generated.
.\g_game.c:446:34: warning: 'memset' call operates on objects of type 'boolean' while the size is based on a different type 'boolean *' [-Wsizeof-pointer-memaccess]
  memset(mousebuttons, 0, sizeof(mousebuttons));
         ~~~~~~~~~~~~            ^~~~~~~~~~~~
.\g_game.c:446:34: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
  memset(mousebuttons, 0, sizeof(mousebuttons));
                                 ^~~~~~~~~~~~
.\g_game.c:447:32: warning: 'memset' call operates on objects of type 'boolean' while the size is based on a different type 'boolean *' [-Wsizeof-pointer-memaccess]
  memset(joybuttons, 0, sizeof(joybuttons));
         ~~~~~~~~~~            ^~~~~~~~~~
.\g_game.c:447:32: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
  memset(joybuttons, 0, sizeof(joybuttons));
                               ^~~~~~~~~~
2 warnings generated.
.\i_net.c:216:40: warning: passing 'int *' to parameter of type 'socklen_t *' (aka 'unsigned int *') converts between pointers to integer types with different sign [-Wpointer-sign]
                  , (struct sockaddr *)&fromaddress, &fromlen );
                                                     ^~~~~~~~
C:\Users\Voltaccept\AppData\Local\emsdk\upstream\emscripten\cache\sysroot/include\sys/socket.h:397:105: note: passing argument to parameter here
ssize_t recvfrom (int, void *__restrict, size_t, int, struct sockaddr *__restrict, socklen_t *__restrict);
                                                                                                        ^
1 warning generated.
.\p_spec.c:1187:11: warning: logical not is only applied to the left hand side of this bitwise operator [-Wlogical-not-parentheses]
            if ((!s2->lines[i]->flags & ML_TWOSIDED) ||
                 ^                    ~
.\p_spec.c:1187:11: note: add parentheses after the '!' to evaluate the bitwise operator first
            if ((!s2->lines[i]->flags & ML_TWOSIDED) ||
                 ^
                  (                                )
.\p_spec.c:1187:11: note: add parentheses around left hand side expression to silence this warning
            if ((!s2->lines[i]->flags & ML_TWOSIDED) ||
                 ^
                 (                   )
1 warning generated.
.\r_segs.c:402:19: warning: taking the absolute value of unsigned type 'angle_t' (aka 'unsigned int') has no effect [-Wabsolute-value]
    offsetangle = abs(rw_normalangle-rw_angle1);
                  ^
.\r_segs.c:402:19: note: remove the call to 'abs' since unsigned values cannot be negative
    offsetangle = abs(rw_normalangle-rw_angle1);
                  ^~~
1 warning generated.
.\d_main.c:168:18: warning: multiple unsequenced modifications to 'eventhead' [-Wunsequenced]
    eventhead = (++eventhead)&(MAXEVENTS-1);
              ~  ^
.\d_main.c:185:51: warning: multiple unsequenced modifications to 'eventtail' [-Wunsequenced]
    for ( ; eventtail != eventhead ; eventtail = (++eventtail)&(MAXEVENTS-1) )
                                               ~  ^
2 warnings generated.
